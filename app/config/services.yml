# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html


parameters:
#    parameter_name: value


services:
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]

    # in_memory_storage_driver:
    #     class:          Milhojas\Infrastructure\Persistence\Storage\Drivers\InMemoryStorageDriver

    # EventSourcing Services

    event_store:
        class:          Milhojas\Library\EventSourcing\EventStore\DoctrineEventStore
        arguments:      ["@doctrine.orm.entity_manager"]

    event_sourcing_repository:
        class:          Milhojas\Infrastructure\Persistence\Storage\EventSourcingStorage
        arguments:      ["@event_store"]

    event_recorder:
        class:          Milhojas\Library\Messaging\EventBus\EventRecorder

    # CommandBus Services

    handler_container:
        class:          Milhojas\Library\Messaging\CommandBus\Containers\HandlerContainer
        arguments:      ["@service_container"]

    handler_inflector:
        class:          Milhojas\Library\Messaging\Shared\Inflector\HandlerInflector

    command_bus:
        class:          Milhojas\Library\Messaging\CommandBus\CommandBus
        arguments:      [["@executer_bus_worker", '@event_bus_worker']]

    commandbus.broadcast_event.handler:
        class:          Milhojas\Library\Messaging\CommandBus\Command\BroadcastEventHandler
        arguments:      ['@event_recorder']

    # CommandBus Workers

    executer_bus_worker:
        class:          Milhojas\Library\Messaging\CommandBus\Worker\ExecuteWorker
        arguments:      ["@loader", "@service_inflector"]

    event_bus_worker:
        class:          Milhojas\Library\Messaging\CommandBus\Worker\DispatchEventsWorker
        arguments:      ['@event_bus', '@event_recorder']

    # QueryBus

    loader:
        class:          Milhojas\Library\Messaging\Shared\Loader\SymfonyContainerLoader
        calls:
            - ['setContainer', ['@service_container']]

    service_inflector:
        class:          Milhojas\Library\Messaging\Shared\Inflector\SymfonyContainerInflector

    query_bus:
        class:          Milhojas\Library\Messaging\QueryBus\QueryBus
        arguments:      ['@loader', '@service_inflector']

# Mailer
    milhojas.templating.engine:
        class:          Milhojas\Infrastructure\Templating\Adapters\TwigTemplating
        arguments:      ['@twig']

    milhojas.mailer.engine:
        class:          Milhojas\Infrastructure\Mail\Adapters\SwiftMailerEngineAdapter
        arguments:      ['@mailer']

    milhojas.mailer.basic:
        class:          Milhojas\Infrastructure\Mail\Mailers\BasicMailer
        arguments:      ['@milhojas.mailer.engine']

    milhojas.mailer:
        class:          Milhojas\Infrastructure\Mail\Mailers\TemplateMailer
        arguments:      ['@milhojas.mailer.basic', '@milhojas.templating.engine']

    cli.output:
        class:          Symfony\Component\Console\Output\ConsoleOutput

# EventBus
    event_bus:
        class:          Milhojas\Library\Messaging\EventBus\EventBus
        arguments:      ['@logger']
        calls:
            # Management
            - ['addListener', ['management.payroll_distribution_started.event', '@management.payroll_progress.resetter'] ]
            - ['addListeners', ['management.payroll_email_was_sent.event', ['@management.payroll_progress.reporter', '@management.payroll_was_sent.cli.reporter']]]
            - ['addListeners', ['management.payroll_email_could_not_be_sent.event', ['@management.payroll_progress.reporter', '@management.email_was_not_sent.cli.reporter']]]
            - ['addListeners', ['management.payroll_could_not_be_found.event', ['@management.payroll_could_not_be_sent.cli.reporter', '@management.payroll_progress.reporter']]]
            - ['addListeners', ['management.all_payrolls_were_sent.event', ['@management.all_payrolls_were_sent.email.reporter','@management.all_payrolls_were_sent.cli.reporter','@management.payroll_progress.resetter']]]

            # Contents
            - ['addListener', ['contents.new_post_was_written', '@contents.post_created.reporter'] ]
            - ['addListener', ['contents.new_post_was_written', '@contents.post_list.projector'] ]
            - ['addListener', ['contents.post_was_updated', '@contents.post_updated.reporter'] ]
            - ['addListener', ['contents.post_was_updated', '@contents.post_list.projector'] ]

        tags:
            - { name: monolog.logger, channel: eventbus }



# HWI Oauth Bundle needs this, we could need another provider

    milhojas.users.manager:
        class: Milhojas\UsersBundle\Infrastructure\UserRepository\YamlUserRepository
        arguments: ['%users.file%']

    milhojas.users.provider:
        class:  Milhojas\UsersBundle\UserProvider\UserProvider
        tags:
            - { name: user.provider }
        arguments:  ['@milhojas.users.manager', ['miralba.org', 'alumnos.miralba.org']]

    milhojas.uploader:
        class: Milhojas\Infrastructure\Uploader\FileUploader
        arguments: ['%upload_inbox%']
