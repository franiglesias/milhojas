# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html


parameters:
#    parameter_name: value


services:
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ['@another_service_name', 'plain_value', '%parameter_name%']

    # in_memory_storage_driver:
    #     class:          Milhojas\Infrastructure\Persistence\Storage\Drivers\InMemoryStorageDriver

    # Flysystem
    # Local filesystem adapter tied to the exchange path

    local_exchange.adapter:
        class:          League\Flysystem\Adapter\Local
        arguments:      ['%exchange_path%']

    # Local filesystem for data exchanges and buffers
    local_exchange.fs:
        class:          League\Flysystem\Filesystem
        arguments:      ['@local_exchange.adapter']

    # Mailer
    milhojas.templating.engine:
        class:          Milhojas\Infrastructure\Templating\Adapters\TwigTemplating
        arguments:      ['@twig']

    milhojas.mailer.engine:
        class:          Milhojas\Infrastructure\Mail\Adapters\SwiftMailerEngineAdapter
        arguments:      ['@mailer']

    milhojas.mailer.basic:
        class:          Milhojas\Infrastructure\Mail\Mailers\BasicMailer
        arguments:      ['@milhojas.mailer.engine']

    milhojas.mailer:
        class:          Milhojas\Infrastructure\Mail\Mailers\TemplateMailer
        arguments:      ['@milhojas.mailer.basic', '@milhojas.templating.engine']

    cli.output:
        class:          Symfony\Component\Console\Output\ConsoleOutput

    # EventSourcing Services

    event_store:
        class:          Milhojas\Library\EventSourcing\EventStore\DoctrineEventStore
        arguments:      ['@doctrine.orm.entity_manager']

    event_sourcing_repository:
        class:          Milhojas\Infrastructure\Persistence\Storage\EventSourcingStorage
        arguments:      ['@event_store']

    event_recorder:
        class:          Milhojas\Messaging\EventBus\EventRecorder


    # Message shared services

    symfony_container:
        class:          Milhojas\Messaging\Shared\Loader\Container\SymfonyContainer
        calls:
            - ['setContainer', ['@service_container']]

    messaging_loader:
        class:          Milhojas\Messaging\Shared\Loader\ContainerLoader
        arguments:      ['@symfony_container']

    service_inflector:
        class:          Milhojas\Messaging\Shared\Inflector\ContainerInflector

    # Message Buses shared workers

    event_bus_worker:
        class:          Milhojas\Messaging\Shared\Worker\DispatchEventsWorker
        arguments:      ['@event_bus', '@event_recorder']

    logger_worker:
        class:          Milhojas\Messaging\Shared\Worker\LoggerWorker
        arguments:      ['@logger']
        tags:
            - { name: monolog.logger, channel: messageBus }

    # CommandBus Services

    command_bus_pipeline:
        class:          Milhojas\Messaging\Shared\Pipeline\WorkerPipeline
        arguments:      [['@executer_bus_worker', '@logger_worker', '@event_bus_worker']]

    command_bus:
        class:          Milhojas\Messaging\CommandBus\CommandBus
        arguments:      ['@command_bus_pipeline']

    # CommandBus Workers

    executer_bus_worker:
        class:          Milhojas\Messaging\CommandBus\Worker\ExecuteWorker
        arguments:      ['@messaging_loader', '@service_inflector']

    # QueryBus

    query_worker:
        class:          Milhojas\Messaging\QueryBus\Worker\QueryWorker
        arguments:      ['@messaging_loader', '@service_inflector']

    query_bus_pipeline:
        class:          Milhojas\Messaging\Shared\Pipeline\WorkerPipeline
        arguments:      [['@query_worker', '@logger_worker']]

    query_bus:
        class:          Milhojas\Messaging\QueryBus\QueryBus
        arguments:      ['@query_bus_pipeline']


# EventBus
    listener_inflector:
        class:           Milhojas\Messaging\EventBus\Inflector\ListenerInflector
        calls:
            # Management
            - ['addListeners', ['management.payroll_email_was_sent.event', ['management.payroll_progress.reporter', 'management.payroll_was_sent.cli.reporter']]]
            - ['addListeners', ['management.payroll_email_could_not_be_sent.event', ['management.payroll_progress.reporter', 'management.email_was_not_sent.cli.reporter']]]
            - ['addListeners', ['management.payroll_could_not_be_found.event', ['management.payroll_could_not_be_sent.cli.reporter', 'management.payroll_progress.reporter', 'management.register_employee_without_payroll.listener']]]
            - ['addListeners', ['management.all_payrolls_were_sent.event', ['management.payroll_sending_complete.reporter', 'management.payroll_progress.resetter']]]

            # Contents
            - ['addListener', ['contents.new_post_was_written', 'contents.post_created.reporter'] ]
            - ['addListener', ['contents.new_post_was_written', 'contents.post_list.projector'] ]
            - ['addListener', ['contents.post_was_updated', 'contents.post_updated.reporter'] ]
            - ['addListener', ['contents.post_was_updated', 'contents.post_list.projector'] ]

    dispatcher_worker:
        class:          Milhojas\Messaging\EventBus\Worker\DispatcherWorker
        arguments:      ['@messaging_loader', '@listener_inflector']

    event_bus_pipeline:
        class:         Milhojas\Messaging\Shared\Pipeline\WorkerPipeline
        arguments:     [['@dispatcher_worker', '@logger_worker']]

    event_bus:
        class:          Milhojas\Messaging\EventBus\EventBus
        arguments:      ['@event_bus_pipeline']

# HWI Oauth Bundle needs this, we could need another provider

    milhojas.users.manager:
        class: Milhojas\UsersBundle\Infrastructure\UserRepository\YamlUserRepository
        arguments: ['%users.file%']

    milhojas.users.provider:
        class:  Milhojas\UsersBundle\UserProvider\UserProvider
        tags:
            - { name: user.provider }
        arguments:  ['@milhojas.users.manager', ['miralba.org', 'alumnos.miralba.org']]

    milhojas.uploader:
        class: Milhojas\Infrastructure\Uploader\FileUploader
        arguments: ['%upload_inbox%']
