# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html


parameters:
#    parameter_name: value
# Groups of related events for subscribers
  milhojas.it.monitor.email.events:
      - 'milhojas.it.device_ran_out_of_supplies'
      - 'milhojas.it.device_failed'
      - 'milhojas.it.device_stopped_listening'
      - 'milhojas.it.device_went_down'
  milhojas.it.monitor.all.events:
      - 'milhojas.it.device_ran_out_of_supplies'
      - 'milhojas.it.device_failed'
      - 'milhojas.it.device_stopped_listening'
      - 'milhojas.it.device_went_down'
      - 'milhojas.it.device_was_ok'

services:
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]
    in_memory_storage_driver:
        class:          Milhojas\Infrastructure\Persistence\Storage\Drivers\InMemoryStorageDriver
    event_store:
        class:          Milhojas\Library\EventSourcing\EventStore\DoctrineEventStore
        arguments:      ["@doctrine.orm.entity_manager"]
    event_sourcing_repository:
        class:          Milhojas\Library\EventSourcing\EventStore\EventSourcingRepository
        arguments:      ["@event_store", Milhojas\Domain\Contents\Post]      
    post_repository:
        class:          Milhojas\Infrastructure\Persistence\Contents\EventBasedPostRepository
        arguments:      ["@event_sourcing_repository"]
        
    handler_container:
        class:          Milhojas\Library\CommandBus\Containers\HandlerContainer
        arguments:      ["@service_container"]
    handler_inflector:
        class:          Milhojas\Library\CommandBus\Inflectors\HandlerInflector
    executer_bus_worker:
        class:          Milhojas\Library\CommandBus\Workers\ExecuteWorker
        arguments:      ["@handler_container", "@handler_inflector"]
    event_bus_worker:
        class:          Milhojas\Library\CommandBus\Workers\DispatchEventsWorker
        arguments:      ['@event_bus', '@event_recorder']
    command_bus:
        class:          Milhojas\Library\CommandBus\BasicCommandBus
        arguments:      [["@executer_bus_worker", '@event_bus_worker']]
        
# Contents Post Command Handlers
    write_post_handler:
        class:          Milhojas\Application\Contents\WritePostHandler
        arguments:      ["@post_repository", "@event_recorder"]
    update_post_handler:
        class:          Milhojas\Application\Contents\UpdatePostHandler
        arguments:      ["@post_repository", "@event_recorder"]

# Mailer
    milhojas.templating.engine:
        class:          Milhojas\Infrastructure\Templating\Adapters\TwigTemplating
        arguments:      ['@twig']
    milhojas.mailer.engine:
        class:          Milhojas\Infrastructure\Mail\Adapters\SwiftMailerEngineAdapter
        arguments:      ['@mailer']
    milhojas.mailer.basic:
        class:          Milhojas\Infrastructure\Mail\Mailers\BasicMailer
        arguments:      ['@milhojas.mailer.engine']
    milhojas.mailer:
        class:          Milhojas\Infrastructure\Mail\Mailers\TemplateMailer
        arguments:      ['@milhojas.mailer.basic', '@milhojas.templating.engine']

# Management Payroll Command Handlers
    finder:
        class:          Symfony\Component\Finder\Finder
    milhojas.payroll.finder:
        class:          Milhojas\Infrastructure\Persistence\Management\PayrollFinder
        arguments:      ["@finder"]
    milhojas.payroll.dataparser:
        class:          Milhojas\Infrastructure\Utilities\TabDataParser
        arguments:      [['id', 'email', 'gender']]
    milhojas.payroll.repository:
        class:          Milhojas\Infrastructure\Persistence\Management\FilePayrollRepository
        arguments:      ["%payroll.dataPath%", "@milhojas.payroll.finder", "@milhojas.payroll.dataparser"]
    send_payroll_handler:
        class:          Milhojas\Application\Management\SendPayrollHandler
        arguments:      ['@milhojas.payroll.repository', '@milhojas.mailer',  "@event_recorder"]
        
    cli.output:
        class:          Symfony\Component\Console\Output\ConsoleOutput
        
    it.report_device_status:
        class:          Milhojas\Application\It\ReportDeviceStatus
        arguments:      ['@milhojas.mailer', '%device.sender%', '%device.report%']
        
    it.cli_report_device_status:
        class:          Milhojas\Application\It\CliReportDeviceStatus
        arguments:      ['@cli.output']
             
    management.cli_report_payroll_was_sent:
        class:          Milhojas\Application\Management\CliReportPayrollWasSent
        arguments:      ['@cli.output']
    
    management.cli_report_payroll_could_not_be_sent:
        class:          Milhojas\Application\Management\CliReportPayrollCouldNotBeSent
        arguments:      ['@cli.output']
    
    contents.post_created.reporter:
        class:          Milhojas\Application\Contents\Reporters\NewPostWasWrittenReporter
        arguments:      ['@milhojas.mailer', '%contents.sender%', '%contents.report%']
        
    contents.post_updated.reporter:
        class:          Milhojas\Application\Contents\Reporters\PostWasUpdatedReporter
        arguments:      ['@milhojas.mailer', '%contents.sender%', '%contents.report%']
        
# EventBus
    event_bus:
        class:          Milhojas\Library\EventBus\SimpleEventBus
        arguments:      ['@logger']
        calls:
            - ['subscribeHandler', ['@it.report_device_status',  '%milhojas.it.monitor.email.events%'] ] 
            - ['subscribeHandler', ['@it.cli_report_device_status',  '%milhojas.it.monitor.all.events%'] ] 
            - ['addHandler', ['milhojas.management.payroll_was_sent', '@management.cli_report_payroll_was_sent'] ]
            - ['addHandler', ['milhojas.management.payroll_could_not_be_sent', '@management.cli_report_payroll_could_not_be_sent'] ]
            - ['addHandler', ['contents.post_was_updated', '@contents.post_updated.reporter'] ]
            - ['addHandler', ['contents.new_post_was_written', '@contents.post_created.reporter'] ]
        tags:
            - { name: monolog.logger, channel: eventbus }
            
# It Command Handlers
    device_monitor:
        class:          Milhojas\Domain\It\DeviceMonitor
    event_recorder:
        class:          Milhojas\Library\EventSourcing\EventStream\EventRecorder
    monitor_devices_handler:
        class:          Milhojas\Application\It\MonitorDevicesHandler
        arguments:      ["@device_monitor", "@event_recorder"]
        
# It Monitor command
    it_monitor:
        class:          AppBundle\Command\It\MonitorCommand
        arguments:      ["@command_bus"]
        tags:
            - {name: console.command}

# Payroll command
    payroll_month:
        class:          AppBundle\Command\Payroll\MonthCommand
        arguments:      ["@command_bus", "%payroll.sender%"]
        tags:
            - {name: console.command}
